.\" Man page generated from reStructuredText.
.
.TH "MEMCACHED_GENERATE_HASH" "3" "February 09, 2014" "1.0.18" "libmemcached"
.SH NAME
memcached_generate_hash \- Generating hash values directly
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.sp
Hash a key value
.SH SYNOPSIS
.sp
#include <libmemcached/memcached.h>
.INDENT 0.0
.TP
.B memcached_hash_t
.UNINDENT
.INDENT 0.0
.TP
.B uint32_t memcached_generate_hash_value(const char\fI\ *key\fP, size_t\fI\ key_length\fP, \fI\%memcached_hash_t\fP\fI\ hash_algorithm\fP)
.UNINDENT
.INDENT 0.0
.TP
.B uint32_t memcached_generate_hash(memcached_st\fI\ *ptr\fP, const char\fI\ *key\fP, size_t\fI\ key_length\fP)
.UNINDENT
.INDENT 0.0
.TP
.B MEMCACHED_HASH_DEFAULT
.UNINDENT
.INDENT 0.0
.TP
.B MEMCACHED_HASH_MD5
.UNINDENT
.INDENT 0.0
.TP
.B MEMCACHED_HASH_CRC
.UNINDENT
.INDENT 0.0
.TP
.B MEMCACHED_HASH_FNV1_64
.UNINDENT
.INDENT 0.0
.TP
.B MEMCACHED_HASH_FNV1A_64
.UNINDENT
.INDENT 0.0
.TP
.B MEMCACHED_HASH_FNV1_32
.UNINDENT
.INDENT 0.0
.TP
.B MEMCACHED_HASH_FNV1A_32
.UNINDENT
.INDENT 0.0
.TP
.B MEMCACHED_HASH_JENKINS
.UNINDENT
.INDENT 0.0
.TP
.B MEMCACHED_HASH_MURMUR
.UNINDENT
.INDENT 0.0
.TP
.B MEMCACHED_HASH_HSIEH
.UNINDENT
.INDENT 0.0
.TP
.B MEMCACHED_HASH_MURMUR3
.UNINDENT
.sp
Compile and link with \-lmemcachedutil \-lmemcached
.SH DESCRIPTION
.sp
\fI\%memcached_generate_hash_value()\fP allows you to hash a key using one of
the hash functions defined in the library. This method is provided for
the convenience of higher\-level language bindings and is not necessary
for normal memcache operations.
.sp
The allowed hash algorithm constants are listed in the manpage for
\fBmemcached_behavior_set()\fP\&.
.sp
\fI\%memcached_generate_hash()\fP takes a \fBmemcached_st\fP struture
and produces the hash value that would have been generated based on the
defaults of \fBmemcached_st\fP\&.
.sp
As of version 0.36 all hash methods have been placed into the library
libhashkit(3) which is linked with libmemcached(3). For more information please see its documentation.
.SH RETURN
.sp
A 32\-bit integer which is the result of hashing the given key.
For 64\-bit hash algorithms, only the least\-significant 32 bits are
returned.
.SH HOME
.sp
To find out more information please check:
\fI\%http://libmemcached.org/\fP
.SH AUTHOR
.sp
Brian Aker, <\fI\%brian@tangent.org\fP>
.SH SEE ALSO
.sp
\fImemcached(1)\fP \fIlibmemcached(3)\fP \fImemcached_strerror(3)\fP
.SH AUTHOR
Brian Aker
.SH COPYRIGHT
2011-2013, Brian Aker DataDifferential, http://datadifferential.com/
.\" Generated by docutils manpage writer.
.
