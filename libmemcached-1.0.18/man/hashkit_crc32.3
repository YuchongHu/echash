.\" Man page generated from reStructuredText.
.
.TH "HASHKIT_CRC32" "3" "February 09, 2014" "1.0.18" "libmemcached"
.SH NAME
hashkit_crc32 \- libhashkit Documentation
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.sp
Various hash functions to use for calculating values for keys
.SH SYNOPSIS
.sp
#include <libhashkit/hashkit.h>
.INDENT 0.0
.TP
.B uint32_t hashkit_default(const char\fI\ *key\fP, size_t\fI\ key_length\fP)
.UNINDENT
.INDENT 0.0
.TP
.B uint32_t hashkit_fnv1_64(const char\fI\ *key\fP, size_t\fI\ key_length\fP)
.UNINDENT
.INDENT 0.0
.TP
.B uint32_t hashkit_fnv1a_64(const char\fI\ *key\fP, size_t\fI\ key_length\fP)
.UNINDENT
.INDENT 0.0
.TP
.B uint32_t hashkit_fnv1_32(const char\fI\ *key\fP, size_t\fI\ key_length\fP)
.UNINDENT
.INDENT 0.0
.TP
.B uint32_t hashkit_fnv1a_32(const char\fI\ *key\fP, size_t\fI\ key_length\fP)
.UNINDENT
.INDENT 0.0
.TP
.B uint32_t hashkit_crc32(const char\fI\ *key\fP, size_t\fI\ key_length\fP)
.UNINDENT
.INDENT 0.0
.TP
.B uint32_t hashkit_hsieh(const char\fI\ *key\fP, size_t\fI\ key_length\fP)
.UNINDENT
.INDENT 0.0
.TP
.B uint32_t hashkit_murmur(const char\fI\ *key\fP, size_t\fI\ key_length\fP)
.UNINDENT
.INDENT 0.0
.TP
.B uint32_t hashkit_jenkins(const char\fI\ *key\fP, size_t\fI\ key_length\fP)
.UNINDENT
.INDENT 0.0
.TP
.B uint32_t hashkit_md5(const char\fI\ *key\fP, size_t\fI\ key_length\fP)
.UNINDENT
.sp
Compile and link with \-lhashkit
.SH DESCRIPTION
.sp
These functions generate hash values from a key using a variety of
algorithms. These functions can be used standalone, or as arguments
to hashkit_set_hash_fn(3) or hashkit_set_continuum_hash_fn(3).
.sp
The hashkit_hsieh is only available if the library is built with
the appropriate flag enabled.
.SH RETURN VALUE
.sp
A 32\-bit hash value.
.SH HOME
.sp
To find out more information please check:
\fI\%http://libmemcached.org/\fP
.SH SEE ALSO
.sp
\fIhashkit_create(3)\fP \fIhashkit_value(3)\fP \fIhashkit_set_hash_fn(3)\fP \fIhashkit_set_continuum_hash_fn(3)\fP
.SH AUTHOR
Brian Aker
.SH COPYRIGHT
2011-2013, Brian Aker DataDifferential, http://datadifferential.com/
.\" Generated by docutils manpage writer.
.
